@model InventoryManagement.DataModel.Products

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Add New Product";
}

<div class="card card-primary mt-4">
    <div class="card-header" style="background-color:#717171">
        <h3 class="card-title text-white">Add New Product</h3>
    </div>

    <form action="ProductAddSubmit" method="post">
        <div class="card-body">

            <!-- Product Name -->
            <div class="form-group mb-3">

                <input asp-for="ProductName" id="ProductName" name="ProductName" class="form-control" placeholder="Enter product name" oninput="validateName(this)" />
                <div id="nameMsg" class="text-warning small"></div>
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>

            <!-- Vendor + Category Row -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <select name="VendorID" id="VendorID" class="form-select form-control">
                        <option selected disabled value="">-- Select Vendor --</option>
                        @foreach (var vendor in ViewBag.VendorList)
                        {
                            <option value="@vendor.VendorID">@vendor.VendorName</option>
                        }
                    </select>
                </div>
                <div class="col-md-6">
                    <select name="Category" id="Category" class="form-select form-control">
                        <option selected disabled value="">-- Select Category --</option>
                        @foreach (var category in ViewBag.CategoryList)
                        {
                            <option value="@category.CategoryName">@category.CategoryName</option>
                        }
                    </select>
                </div>
            </div>


            <!-- Quantity + Price Row -->
            <div class="row mb-3">
                <div class="col-md-6">

                    <input asp-for="Quantity" id="Quantity" name="Quantity" type="number" min="0" step="1" class="form-control" placeholder="Enter quantity"/>          
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="col-md-6">

                    <input asp-for="Price" id="Price" name="Price" type="number" min="0" step="1" class="form-control" placeholder="Sell price" oninput="validateNumber(this)" />
                    <div id="priceMsg" class="text-warning small"></div>
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
            </div>

            <!-- Description -->
            <div class="form-group mb-3">

                <textarea asp-for="Description" id="Description" name="Description" class="form-control" rows="3" placeholder="Enter description"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

        </div>

        <div class="card-footer">
            <button type="submit" class="btn btn-primary" style="background-color:#717171">Save Product</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.getElementById('Quantity').addEventListener('input', function (e) {
            if (this.value < 0) {
                this.value = 0;
            }
        });

         document.getElementById('Price').addEventListener('input', function (e) {
            if (this.value < 0) {
                this.value = 0;
            }
        });
    </script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        function showMessage(msg, elementId) {
            const el = document.getElementById(elementId);
            el.innerText = msg;
            setTimeout(() => el.innerText = '', 1500);
        }

        function validateName(input) {
            const lastChar = input.value.slice(-1);

            // If input is empty or last char is valid, do nothing
            if (!lastChar || /^[a-zA-Z\s]$/.test(lastChar)) {
                return;
            }

            // If invalid character, remove it and show warning
            input.value = input.value.slice(0, -1); // remove last char
            showMessage('Only alphabets and spaces allowed', 'nameMsg');
        }

            function validateNumber(input) {
            const lastChar = input.value.slice(-1);

            // If input is empty or last character is valid digit, do nothing
            if (!lastChar || /^[0-9]$/.test(lastChar)) {
                return;
            }

            // If invalid character, remove it and show warning
            input.value = input.value.slice(0, -1);
            showMessage('Only numbers allowed', 'phoneMsg');
        }
    </script>
}